---
// Static build-time timestamp
const lastUpdated = new Date().toLocaleDateString("en-IN", {
  year: "numeric",
  month: "long",
  day: "numeric",
});

const country = "india";

// Initial server-side rendered times (will be replaced by client-side updates)
const initialTime12 = new Date().toLocaleTimeString("en-IN", {
  timeZone: "Asia/Kolkata",
  hour: "numeric",
  minute: "2-digit",
  hour12: true,
});
const initialTime24 = new Date().toLocaleTimeString("en-IN", {
  timeZone: "Asia/Kolkata",
  hour: "numeric",
  minute: "2-digit",
  hour12: false,
});
---

<footer
  class="container-narrow bg-background/70 text-primary/70 sticky bottom-0 z-50 flex h-24 items-center justify-evenly [mask-image:linear-gradient(to_top,var(--background)_60%,transparent_100%)] py-4 backdrop-blur-md [-webkit-mask-image:linear-gradient(to_top,var(--background)_60%,transparent_100%)]">
  <p>jass.gg &copy;</p>
  <span aria-hidden="true">•</span>
  <p>
    last updated on <time datetime={new Date().toISOString()}
      >{lastUpdated}</time
    >
  </p>
  <span aria-hidden="true">•</span>
  <p>{country}</p>
  <span aria-hidden="true">•</span>
  <p>
    <time id="live-time" datetime={new Date().toISOString()}>
      {initialTime12} / {initialTime24} IST
    </time>
  </p>
</footer>

<script>
  function updateLiveTime(): void {
    const now = new Date();

    const time12 = now.toLocaleTimeString("en-IN", {
      timeZone: "Asia/Kolkata",
      hour: "numeric",
      minute: "2-digit",
      hour12: true,
    });

    const time24 = now.toLocaleTimeString("en-IN", {
      timeZone: "Asia/Kolkata",
      hour: "numeric",
      minute: "2-digit",
      hour12: false,
    });

    const timeElement = document.getElementById("live-time");
    if (timeElement) {
      timeElement.textContent = `${time12} / ${time24} IST`;
      timeElement.setAttribute("datetime", now.toISOString());
    }
  }

  // Only run on client-side
  if (typeof window !== "undefined") {
    // Update time immediately when script loads
    updateLiveTime();

    // Update time every minute
    const intervalId = setInterval(updateLiveTime, 60 * 1000);

    // Cleanup on page unload (good practice for SPAs)
    window.addEventListener("beforeunload", () => {
      clearInterval(intervalId);
    });
  }
</script>
